#################################################################################################################
## TP01 - Cassandra - cluster 6 noeuds 2 DC :
#################################################################################################################

#################################################################################################################
## Monter la VM suivante dans Virtual_box : 
## F:\Formation\Kafka\VMs\Kafka - Ubuntu 20.04 - début TP01 - 2023-06-24.ova
#################################################################################################################

#################################################################################################################
## se connecter avec l'utilisateur "user" (mot de passe : user)
#################################################################################################################

su - user

pwd

## Rien ne doit s'exécuter :
docker ps -a 


## On nettoie les fichiers de configuration pour les éventuels lancements précédents : 
sudo rm -Rf cassandra* 
sudo rm -Rf dock*.yml 

sudo chmod 777 -Rf ~/

sudo mkdir -p /home/user/apidb-int-stg-1/data
sudo mkdir -p /home/user/apidb-int-stg-2/data
sudo mkdir -p /home/user/apidb-int-stg-3/data
sudo mkdir -p /home/user/apidb-int-stg-4/data
sudo mkdir -p /home/user/apidb-int-stg-5/data
sudo mkdir -p /home/user/apidb-int-stg-6/data

sudo chmod 777 -Rf /home/user/apidb-int-stg-*/data

sudo chmod 777 -Rf /home/user/


## Remarque : si simple redémarrage à blanc : 
sudo rm -Rf apidb-int-stg-*/data/*



## Exemple d'images docker disponibles de cassandra : 
## docker search cassandra 
## image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
## image: cassandra:4.1


## On crée maintenant le fichier de déploiement docker-compose de notre cluster Cassandra : 
## cluster cassandra à 6 noeuds répartis sur 2 Datacenter :


vi docker-compose-6-noeuds-2-DC-CTIE.yml

################################################################################################################################
## Option N°1 : Début du fichier pour un déploiement en réseau "cassandra" : 
################################################################################################################################


version: "3.8"
networks:
  cassandra:
services:
  apidb-int-stg-1:
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-1
    hostname: apidb-int-stg-1
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-1:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-1/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

  apidb-int-stg-2:
    depends_on:
      apidb-int-stg-3:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-2
    hostname: apidb-int-stg-2
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-2:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-2/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK1
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9043:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

  apidb-int-stg-3:
    depends_on:
      apidb-int-stg-1:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-3
    hostname: apidb-int-stg-3
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-3:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-3/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK2
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9044:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

  apidb-int-stg-4:
    depends_on:
      apidb-int-stg-2:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-4
    hostname: apidb-int-stg-4
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-4:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-4/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK2
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9045:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

  apidb-int-stg-5:
    depends_on:
      apidb-int-stg-3:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-5
    hostname: apidb-int-stg-5
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-5:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-5/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK3
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9046:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

  apidb-int-stg-6:
    depends_on:
      apidb-int-stg-4:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-6
    hostname: apidb-int-stg-6
    mem_limit: 2g
    restart: always
    volumes:
      - apidb-int-stg-6:/var/lib/cassandra
      # - "/home/user/apidb-int-stg-6/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK3
      #- CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      #- CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9047:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces"]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s
    networks:
      - cassandra

volumes:
  apidb-int-stg-1:
  apidb-int-stg-2:
  apidb-int-stg-3:
  apidb-int-stg-4:
  apidb-int-stg-5:
  apidb-int-stg-6:
  
################################################################################################################################
## Fin du fichier
################################################################################################################################



vi docker-compose-6-noeuds-2-DC-mappage-CTIE.yml

################################################################################################################################
## Option N°2  Début du fichier pour un déploiement en réseau localhost avec mappage de disque : 
################################################################################################################################

version: "3.8"
services:
  apidb-int-stg-1:
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-1
    hostname: apidb-int-stg-1
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-1:/var/lib/cassandra      
      #- "/home/user/cassandra01:/etc/cassandra:rw" 
      #- "d:\cassandra01_data:/var/lib/cassandra:rw"   
      - "/home/user/apidb-int-stg-1/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9042
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9042"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ]  
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

  apidb-int-stg-2:
    depends_on:
      apidb-int-stg-1:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-2
    hostname: apidb-int-stg-2
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-2:/var/lib/cassandra
      - "/home/user/apidb-int-stg-2/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9043
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9043:9043"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9043"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ]
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

  apidb-int-stg-3:
    depends_on:
      apidb-int-stg-2:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-3
    hostname: apidb-int-stg-3
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-3:/var/lib/cassandra
      - "/home/user/apidb-int-stg-3/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK2
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9044
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9044:9044"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9044"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ] 
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

  apidb-int-stg-4:
    depends_on:
      apidb-int-stg-3:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-4
    hostname: apidb-int-stg-4
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-4:/var/lib/cassandra
      - "/home/user/apidb-int-stg-4/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK2
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9045
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9045:9045"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9045"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ] 
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

  apidb-int-stg-5:
    depends_on:
      apidb-int-stg-4:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-5
    hostname: apidb-int-stg-5
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-5:/var/lib/cassandra
      - "/home/user/apidb-int-stg-5/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK3
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9046
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9046:9046"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9046"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ]
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

  apidb-int-stg-6:
    depends_on:
      apidb-int-stg-5:
        condition: service_healthy
    image: registry.axonops.com/axonops-public/axonops-docker/cassandra:4.1
    container_name: apidb-int-stg-6
    hostname: apidb-int-stg-6
    mem_limit: 1g
    restart: always
    volumes:
      #- apidb-int-stg-6:/var/lib/cassandra
      - "/home/user/apidb-int-stg-6/data:/var/lib/cassandra:rw"
    environment:
      - CASSANDRA_CLUSTER_NAME=cass_stg_cluster
      - CASSANDRA_NUM_TOKENS=256   
      - CASSANDRA_SEEDS=apidb-int-stg-1,apidb-int-stg-2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK3
      - CASSANDRA_BROADCAST_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_NATIVE_TRANSPORT_PORT=9047
      - MAX_HEAP_SIZE=256m
      - HEAP_NEWSIZE=50m  
    ports:
      - "9047:9047"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9047"]
      #test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ]   
      #test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
      interval: 5s
      timeout: 5s
      retries: 60
      #start_period: 60s

#volumes:
#  apidb-int-stg-1:
#  apidb-int-stg-2:
#  apidb-int-stg-3:
#  apidb-int-stg-4:
#  apidb-int-stg-5:
#  apidb-int-stg-6:
















## On notera au passage la façon de vérifier que le container est bien lancé : 
##  Voici quelques méthodes possibles :  
##     test: ["CMD-SHELL", "[ $$(nodetool -h 127.0.0.1 -pw cassandra -u cassandra statusgossip) = running ]"]
## ou, si "nc" est installé dans l'image docker : 
##     test: ["CMD", "nc", "-z", "127.0.0.1", "9044"]
## ou encore : 
##     test: ["CMD", "cqlsh", "-e", "describe keyspaces", "127.0.0.1", "9042" ]   

## cqlsh -p cassandra -u cassandra -e 'describe keyspaces;' 127.0.0.1 9042




## On lance maintenant le cluster : 
## docker compose -f docker-compose-6-noeuds-2-DC-CTIE.yml up -d
docker compose -f docker-compose-6-noeuds-2-DC-mappage-CTIE.yml up -d

## On contrôle le bon démarrage (plusieurs minutes) : 
docker ps -a

docker logs apidb-int-stg-1
docker logs apidb-int-stg-1 | grep 'jump'

docker exec -it apidb-int-stg-1 bash



#################################################################################################################
## Une fois le cluster totalement démarré, vous aurez donc : 
#################################################################################################################

docker logs apidb-int-stg-1 | grep 'jump'
docker logs apidb-int-stg-2 | grep 'jump'
docker logs apidb-int-stg-3 | grep 'jump'
docker logs apidb-int-stg-4 | grep 'jump'
docker logs apidb-int-stg-5 | grep 'jump'
docker logs apidb-int-stg-6 | grep 'jump'

## Affichage typique attendu pour chaque commande : 
## 	INFO  [main] 2024-01-11 15:39:05,574 StorageService.java:3084 - Node /172.22.0.2:7000 state jump to NORMAL


#################################################################################################################
## On vérifie finalement que le cluster est opérationnel également au sens "service cassandra" :
#################################################################################################################
docker exec -it apidb-int-stg-1 nodetool status 



#################################################################################################################
## Fin du lancement du cluster Cassandra 6 noeuds - 2 DC - CTIE
#################################################################################################################
